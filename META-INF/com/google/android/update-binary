#!/sbin/sh
# AnyKernel2 Backend
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";
DIR=`dirname "$ZIPFILE"`;

ui_print() {
  until [ ! "$1" ]; do
    echo -e "ui_print $1\nui_print" > $OUTFD;
    shift;
  done;
}
show_progress() { echo "progress $1 $2" > $OUTFD; }
file_getprop() { grep "^$2=" "$1" | cut -d= -f2; }
if [ ! "$(getprop 2>/dev/null)" ]; then
  getprop() {
    local propval="$(file_getprop /default.prop $1 2>/dev/null)";
    test "$propval" || local propval="$(file_getprop $root/system/build.prop $1 2>/dev/null)";
    test "$propval" && echo "$propval" || echo "";
  }
fi;
cleanup() { rm -rf /tmp/anykernel; }
debugging() {
  case $(basename "$ZIPFILE" .zip) in
    *-debugging)
      ui_print " ";
      ui_print "Creating debugging archive in zip directory...";
      $bb tar -czvf "$DIR/anykernel2-$(date +%Y-%m-%d_%H%M%S)-debug.tgz" /tmp/*;
    ;;
  esac;
}
unmount_all() {
  (umount /system;
  if [ -d /system_root -a ! -f /system/build.prop ]; then
    umount /system_root;
  fi;
  umount /system;
  umount /vendor;
  umount /data) 2>/dev/null;
}
abort() {
  ui_print "$*";
  debugging;
  if [ ! -f /tmp/anykernel/anykernel.sh -o "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanuponabort 2>/dev/null)" == 1 ]; then
    cleanup;
  fi;
  unmount_all;
  exit 1;
}

show_progress 1.34 4;
ui_print " ";
cleanup;
mkdir -p /tmp/anykernel/bin;
cd /tmp/anykernel;
unzip -o "$ZIPFILE";
if [ $? != 0 -o -z "$(ls /tmp/anykernel/tools)" ]; then
  abort "Unzip failed. Aborting...";
fi;
bb=/tmp/anykernel/tools/busybox;
chmod 755 $bb;
$bb chmod -R 755 /tmp/anykernel/tools /tmp/anykernel/bin;

if [ -f /tmp/anykernel/banner ]; then
  while IFS='' read -r line || $bb [[ -n "$line" ]]; do
    ui_print "$line";
  done < /tmp/anykernel/banner;
  ui_print " ";
  ui_print " ";
fi;

ui_print "$(file_getprop /tmp/anykernel/anykernel.sh kernel.string)";
if [ -f /tmp/anykernel/version ]; then
  ui_print " ";
  while IFS='' read -r line || $bb [[ -n "$line" ]]; do
    ui_print "$line";
  done < /tmp/anykernel/version;
  ui_print " ";
fi;
ui_print " ";
ui_print "AnyKernel2 by osm0sis @ xda-developers";
ui_print " ";
ui_print " ";

unmount_all;
mount -o ro -t auto /system;
mount -o ro -t auto /vendor 2>/dev/null;
mount /data 2>/dev/null;
test -f /system/system/build.prop && root=/system;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.devicecheck)" == 1 ]; then
  ui_print "Checking device...";
  device="$(getprop ro.product.device)";
  product="$(getprop ro.build.product)";
  for i in 1 2 3 4 5; do
    testname="$(file_getprop /tmp/anykernel/anykernel.sh device.name$i)";
    test "$testname" || break;
    if [ "$device" == "$testname" -o "$product" == "$testname" ]; then
      ui_print "$testname";
      match=1;
      break;
    fi;
  done;
  ui_print " ";
  if [ "$match" != 1 ]; then
    abort "Unsupported device. Aborting...";
  fi;
fi;

if [ -f /system/system/build.prop ]; then
  umount /system;
  umount /system 2>/dev/null;
  mkdir /system_root 2>/dev/null;
  mount -o ro -t auto /dev/block/bootdevice/by-name/system /system_root;
  mount -o bind /system_root/system /system;
  unset root;
fi;
savedpath="$LD_LIBRARY_PATH";
savedpre="$LD_PRELOAD";
unset LD_LIBRARY_PATH;
unset LD_PRELOAD;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.osversion)" == 1 ]; then
  mount -o rw,remount -t auto /system;
    if [ "$(grep 'ro.build.version.sdk=29' /system/build.prop | wc -l)" -eq "1" ]; then
      ui_print "Android Pie 9.1.X detected";
      ui_print " ";
    elif [ "$(grep 'ro.build.version.sdk=28' /system/build.prop | wc -l)" -eq "1" ]; then
      ui_print "Android Pie 9.0.X detected";
      ui_print " ";
    elif [ "$(grep 'ro.build.version.sdk=27' /system/build.prop | wc -l)" -eq "1" ]; then
      ui_print "Android Oreo 8.1.X detected";
      ui_print " ";
    elif [ "$(grep 'ro.build.version.sdk=26' /system/build.prop | wc -l)" -eq "1" ]; then
      ui_print "Android Oreo 8.0.X detected";
      ui_print " ";
    elif [ "$(grep 'ro.build.version.sdk=25' /system/build.prop | wc -l)" -eq "1" ]; then
      ui_print "Android Nougat 7.1.X detected";
      ui_print " ";
    elif [ "$(grep 'ro.build.version.sdk=24' /system/build.prop | wc -l)" -eq "1" ]; then
      ui_print "Android Nougat 7.0.X detected";
      ui_print " ";
    elif [ "$(grep 'ro.build.version.sdk=23' /system/build.prop | wc -l)" -eq "1" ]; then
      ui_print "Android Marshmallow 6.0.1 detected";
      ui_print " ";
      abort "Unsupported Android Version. Aborting...";
    fi;
  mount -o ro,remount -t auto /system;
fi;

if [ "$(cat /dev/block/bootdevice/by-name/boot | grep -m 1 androidboot | grep permissive | wc -l)" -gt "0" ]; then
  ui_print "Permissive Selinux detected";
  ui_print " ";
else
  ui_print "Enforcing Selinux detected";
  ui_print " ";
fi;

ui_print "Rom info";
username="$(file_getprop /system/build.prop "ro.build.user")";
ui_print "- User: $username";

hostname="$(file_getprop /system/build.prop "ro.build.host")";
ui_print "- Host: $hostname";

productname="$(file_getprop /system/build.prop "ro.product.name")";
ui_print "- Product name: $productname";

date_flag="$(date +%Y-%m-%d)";
ui_print "- Current system date: $date_flag";
ui_print " ";

ui_print "Looking for installed kernel...";
ui_print " ";

ui_print "                                             ";
ui_print "           __     __    _                    ";
ui_print "           \ \   / /   | |                   ";
ui_print "            \ \_/ /   _| | ____ _            ";
ui_print "             \   / | | | |/ / _' |           ";
ui_print "              | || |_| |   < (_| |           ";
ui_print "              |_| \__,_|_|\_\__,_|           ";
ui_print "                  K E R N E L                ";
ui_print "                  Ayra Hikari                ";
ui_print "                                             ";
ui_print "                                             ";

ui_print "Installing...";
for i in $($bb --list); do
  $bb ln -s $bb /tmp/anykernel/bin/$i;
done;
if [ $? != 0 -o -z "$(ls /tmp/anykernel/bin)" ]; then
  abort "Recovery busybox setup failed. Aborting...";
fi;
PATH="/tmp/anykernel/bin:$PATH" $bb ash /tmp/anykernel/anykernel.sh $2;
if [ $? != "0" ]; then
  abort;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.modules)" == 1 ]; then
  if [ "$(find "/tmp/anykernel/modules/" -name "*ko")" ]; then
    ui_print " ";
    ui_print "Pushing modules...";
    mount -o rw,remount -t auto /system;
    $bb cp -rLf /tmp/anykernel/modules/* $root/system/lib/modules/;
    set_perm_recursive 0 0 0755 0644 $root/system/lib/modules;
    chcon -R 'u:object_r:system_file:s0' $root/system/lib/modules;
    mount -o ro,remount -t auto /system;
  fi;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.system)" == 1 ] &&
   [ -e /system/xbin/zip ]; then
  ui_print " ";
  ui_print "Pushing system...";
  mount -o rw,remount -t auto /system;
  $bb cp -rLf /tmp/anykernel/ramdisk/system/* $root/system/;
  mount -o ro,remount -t auto /system;
fi;

mount -o rw,remount -t auto /system;
if [ "$(cat /system/usr/keylayout/Generic.kl | grep "key 139   MENU" | wc -l)" -gt 0 ]; then
  ui_print " ";
  ui_print "Patching key layout...";
  $bb cp /system/usr/keylayout/Generic.kl /system/usr/keylayout/Generic.kl.bak;
  sed -i 's/key 139   MENU/key 139   APP_SWITCH/g' /system/usr/keylayout/Generic.kl;
  sed -i 's/key 580   APP_SWITCH/key 580   MENU/g' /system/usr/keylayout/Generic.kl;
fi;
mount -o ro,remount -t auto /system;

debugging;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanup)" == 1 ]; then
  cleanup;
fi;

ui_print " ";
ui_print "Running fstrim...";
fstrim -v /system;
fstrim -v /data;
fstrim -v /vendor;

test "$savedpath" && export LD_LIBRARY_PATH="$savedpath";
test "$savedpre" && export LD_PRELOAD="$savedpre";

unmount_all;

ui_print " ";
ui_print " ";
ui_print "Done!";
